{"version":3,"sources":["assets/paly.mp3","assets/correct.mp3","assets/wait.mp3","assets/wrong.mp3","components/Trivia.jsx","components/Timer.jsx","components/Start.jsx","App.jsx","fetcher.jsx","index.js"],"names":["Trivia","data","setStop","setTimeFreeze","username","questionNumber","setQuestionNumber","useState","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","useSound","play","letsPlay","correct","correctAnswer","wait","wrong","wrongAnswer","useEffect","console","log","correct_answer","delay","duration","callback","setTimeout","answers","map","a","onClick","b","prev","handleclick","Timer","setTimeAmount","timeFreez","timer","setTimer","interval","setInterval","clearInterval","Start","setUsername","inputRef","useRef","type","placeholder","required","ref","current","value","App","datas","amount","setAmount","timeFreeze","stop","earned","setEarned","money","moneyPyramid","useMemo","id","reverse","find","m","timee","target","href","Fetcher","state","quiz","loading","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","fetch","response","json","results","this","i","incorrect_answers","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df1bd73e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/paly.8e5f6d1d.mp3\";","export default __webpack_public_path__ + \"static/media/correct.160572d7.mp3\";","export default __webpack_public_path__ + \"static/media/wait.30e329da.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.e9468218.mp3\";","import React from \"react\";\r\nimport { useEffect , useState} from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport play from \"../assets/paly.mp3\";\r\nimport correct from \"../assets/correct.mp3\";\r\nimport wait from \"../assets/wait.mp3\";\r\nimport wrong from \"../assets/wrong.mp3\";\r\nconst Trivia = ({data,setStop,username,setTimeFreeze,questionNumber,setQuestionNumber})=> {\r\n    \r\n    const [question, setQuestion] = useState(null);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [className, setClassName] = useState(\"answer\");\r\n    const [letsPlay] = useSound(play);\r\n    const [correctAnswer] = useSound(correct);\r\n    const [waits] = useSound(wait);\r\n    const [wrongAnswer] = useSound(wrong);\r\n\r\n    useEffect(()=>{\r\n       letsPlay();\r\n    },[letsPlay]);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(questionNumber===16) return setStop(true);\r\n        \r\n        setQuestion(data[questionNumber-1]);\r\n        \r\n        \r\n    },[data,questionNumber])\r\n\r\n\r\n    console.log(question?.correct_answer);\r\n    const delay = (duration,callback)=>{\r\n        setTimeout(() => {\r\n            callback();\r\n        }, duration);\r\n    }\r\n\r\n    const handleclick = (a)=>{\r\n        \r\n        setTimeFreeze(true);\r\n        let b = question?.correct_answer;\r\n        setSelectedAnswer(a);\r\n        setClassName(\"answer active\");\r\n        delay(3000,()=>\r\n            setClassName(a===b ? \"answer correct\" : \"answer wrong\")\r\n        );\r\n        delay(5000, ()=>{\r\n                if(a===b){\r\n                    correctAnswer();\r\n                    \r\n                    delay(1000,()=>{\r\n                        setSelectedAnswer(null);\r\n                        setClassName(\"answer\");\r\n                        setQuestionNumber(prev => prev+1);                        \r\n                    })\r\n                    \r\n                    \r\n                }\r\n                else{\r\n                    wrongAnswer();\r\n                    delay(1000, () => {\r\n                        setStop(true);\r\n                    });\r\n                }\r\n            }\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div className=\"trivia\">\r\n            <div className=\"question\">{question?.question} \r\n                \r\n            </div>\r\n            <div className=\"answers\">\r\n            \r\n                {question?.answers.map((a)=>{\r\n                    return(<div className={selectedAnswer === a ? className : \"answer\"} onClick={() => !selectedAnswer && handleclick(a)} >{a}</div>)\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n \r\nexport default Trivia;","import { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function Timer({setStop,setTimeAmount,questionNumber,setTimeFreeze,timeFreez}) {\r\n    const [timer, setTimer] = useState(45);\r\n    useEffect(() => {\r\n        \r\n        if(timer===0) return setStop(true);\r\n        const interval = setInterval(() => {\r\n            setTimer(prev => prev-1);\r\n        }, 1000);\r\n        if(timeFreez) return clearInterval(interval);\r\n        return ()=> clearInterval(interval);\r\n        \r\n    },[setStop,timer]);\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeFreeze(false);\r\n        if(questionNumber<=10 && questionNumber >5){\r\n            setTimer(60);\r\n            setTimeAmount(60);\r\n        }\r\n        else if(questionNumber>10){\r\n            setTimer(180);\r\n            setTimeAmount(180);\r\n        }\r\n        else{\r\n            setTimer(45);\r\n        }\r\n    }, [questionNumber]);\r\n    return timer;\r\n}\r\n","import { useRef } from \"react\"\r\n\r\n\r\nexport default function Start({setUsername}) {\r\n    const inputRef = useRef();\r\n    const handleStart = ()=>{\r\n        setUsername(inputRef.current.value);\r\n    }\r\n    return (\r\n        <div className=\"start\" >\r\n            <input type=\"text\" placeholder=\"Enter Your Name\" required ref={inputRef} className=\"startInput\" />\r\n            <button className=\"startButton\" onClick={handleStart}>Start</button>\r\n        </div>\r\n    )\r\n}\r\n","import { useState,useEffect, useMemo } from 'react';\nimport Trivia from './components/Trivia';\nimport Timer from './components/Timer';\nimport Start from './components/Start';\n\n\n\nfunction App({datas}) {\n  const [timeAmount, setTimeAmount] = useState(45)\n  const [amount, setAmount] = useState(1000)\n  const [timeFreeze,setTimeFreeze] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [questionNumber,setQuestionNumber] = useState(1);\n  const [stop,setStop] = useState(false);\n  const [earned, setEarned] = useState(\"₹ 0\");\n  const money = [\"₹ 1000\",\"₹ 2000\",\" ₹ 3000\",\"₹ 5000\",\"₹ 10000\",\" ₹ 20000\",\"₹ 40000\",\n    \"₹ 80000\",\"₹ 160000\",\"₹ 320000\",\"₹ 640000\",\"₹ 1280000\",\"₹ 2500000\",\"₹ 5000000\",\"₹ 10000000\"\n  ]\n  const moneyPyramid = useMemo(() => \n    [\n      {id:1,amount:\"₹ 1000\"},\n      {id:2,amount:\"₹ 2000\"},\n      {id:3,amount:\"₹ 3000\"},\n      {id:4,amount:\"₹ 5000\"},\n      {id:5,amount:\"₹ 10000\"},\n      {id:6,amount:\"₹ 20000\"},\n      {id:7,amount:\"₹ 40000\"},\n      {id:8,amount:\"₹ 80000\"},\n      {id:9,amount:\"₹ 160000\"},\n      {id:10,amount:\"₹ 320000\"},\n      {id:11,amount:\"₹ 640000\"},\n      {id:12,amount:\"₹ 1280000\"},\n      {id:13,amount:\"₹ 2500000\"},\n      {id:14,amount:\"₹ 5000000\"},\n      {id:15,amount:\"₹ 10000000\"},\n    ].reverse(),\n  []);\n  const data = [...datas];\n\n  useEffect(() => {\n    questionNumber > 1 && setEarned(moneyPyramid.find((m)=>m.id===questionNumber-1).amount)\n\n  }, [moneyPyramid,questionNumber])\n  \n  useEffect(() => {\n    let num = questionNumber;\n    setAmount(money[num-1]);\n    \n  }, [questionNumber])\n  const timee = <Timer setTimeAmount = {setTimeAmount} setTimeFreeze={setTimeFreeze} timeFreez={timeFreeze} setStop={setStop} questionNumber={questionNumber} />;\n  return (\n      <div className=\"app\" >\n        \n        {username ? (\n          <>\n            <div className=\"main\">\n            {stop ? (<><div className=\"author\"><h3>Made By<a target=\"_blank\" href=\"https://venkateswararao.netlify.app\" className=\"authorName\">Venkatesh</a></h3></div><div className=\"endText\" ><h1>Congratulation {username}</h1> <h3>You Earned {earned}</h3></div></>):(\n              <>\n              <div className=\"top\">\n                <div className=\"author\"><h3>Made By<a target=\"_blank\" href=\"https://venkateswararao.netlify.app\" className=\"authorName\">Venkatesh</a></h3></div>\n                <div className=\"mobPyramid\">\n                  <span>{amount}</span>\n\n                </div>\n                <div className=\"timer\" >\n                  {timee}  \n                </div>\n              </div>\n              <div className=\"bottom\">\n                <Trivia data = {data} \n                  username = {username}\n                  setTimeFreeze = {setTimeFreeze}\n                  setStop = {setStop} \n                  questionNumber = {questionNumber}\n                  setQuestionNumber = {setQuestionNumber} \n                />\n              </div>\n            </>)}\n          </div>\n          <div className=\"pyramid\">\n            <ul className=\"moneyList\">\n              {moneyPyramid.map((m)=>{\n                return(\n                  <li className={questionNumber === m.id ?\"moneyListItem active\" : \"moneyListItem\"}>\n                  <span className=\"moneyListItemNumber\">{m.id}</span>\n                  <span className=\"moneyListItemAmount\">{m.amount}</span>\n                </li>\n                );\n              })}\n              \n              \n            </ul>\n          </div>\n          </>\n        ): <Start setUsername={setUsername}/> }\n        \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport App from './App';\r\nimport './app.css';\r\nimport { CommonLoading } from 'react-loadingg';\r\nclass Fetcher extends React.Component {\r\n    state = {\r\n        \r\n        quiz:[\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n            {\r\n                id:null,\r\n                loading:true,\r\n                question:null,\r\n                correct_answer:null,\r\n                answers:null\r\n            },\r\n\r\n        ]\r\n    }\r\n    async componentDidMount(){\r\n        const url = \"https://opentdb.com/api.php?amount=15&category=9&type=multiple\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const results = data.results;\r\n        const {quiz} = this.state;\r\n        \r\n        \r\n        \r\n\r\n        for(let i =0;i<results.length;i++){\r\n            quiz[i].id=i+1;\r\n            quiz[i].question = results[i].question;\r\n            quiz[i].loading=false;\r\n            quiz[i].correct_answer=results[i].correct_answer;\r\n            quiz[i].answers=results[i].incorrect_answers;\r\n            quiz[i].answers=[...this.state.quiz[i].answers,this.state.quiz[i].correct_answer]\r\n        }\r\n        \r\n        \r\n        function shuffle(array) {\r\n            let currentIndex = array.length,  randomIndex;\r\n            \r\n            // While there remain elements to shuffle...\r\n            while (currentIndex !== 0) {\r\n          \r\n              // Pick a remaining element...\r\n              randomIndex = Math.floor(Math.random() * currentIndex);\r\n              currentIndex--;\r\n          \r\n              // And swap it with the current element.\r\n              [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex], array[currentIndex]];\r\n            }\r\n          \r\n            return array;\r\n        }\r\n        for(let i=0;i<=14;i++){\r\n            quiz[i].answers=shuffle(this.state.quiz[i].answers)\r\n            this.setState({\r\n                quiz:quiz\r\n            })\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n    \r\n    render() \r\n    { \r\n        \r\n        return (\r\n            <div >\r\n                {this.state.quiz[14].loading ? \r\n                    (<CommonLoading />):\r\n                    (<>\r\n                        <App datas={this.state.quiz} />\r\n                    </>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default Fetcher;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Fetcher from './fetcher';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n   \n    <Fetcher  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}